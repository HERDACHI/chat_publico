{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HERNAN\\\\Desktop\\\\PRoGRAMACIoN\\\\chat\\\\app-chat\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport NickWindow from './NickWindow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [nick, setNick] = useState('');\n  const [showNickInput, setShowNickInput] = useState(true);\n  useEffect(() => {\n    fetch('http://localhost:3001/mensajes', {\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      setMessages(data);\n      console.log('Mensajes cargados correctamente desde la base de datos.');\n    }).catch(error => {\n      console.error('Error al cargar mensajes desde la base de datos:', error);\n    });\n  }, []);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetch('http://localhost:3001/mensajes', {\n        method: 'GET'\n      }).then(response => response.json()).then(data => {\n        setMessages(data);\n        console.log('Mensajes actualizados correctamente desde la base de datos.');\n      }).catch(error => {\n        console.error('Error al actualizar mensajes desde la base de datos:', error);\n      });\n    }, 3000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleSendMessage = newMessage => {\n    console.log(\"newMessage:\", newMessage);\n    setMessages([...messages, newMessage]);\n    fetch('http://localhost:3001/mensajes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newMessage)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Error al guardar el mensaje en la base de datos.');\n      }\n      console.log('Mensaje guardado correctamente en la base de datos.');\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleNickSubmit = nick => {\n    setNick(nick);\n    setShowNickInput(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: showNickInput ? /*#__PURE__*/_jsxDEV(NickWindow, {\n      onNickSubmit: handleNickSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: handleSendMessage,\n        nick: nick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NJxMlkd9ByjzYb2XUC1w5Xucf+c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MessageList","MessageInput","NickWindow","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","messages","setMessages","nick","setNick","showNickInput","setShowNickInput","fetch","method","then","response","json","data","console","log","catch","error","intervalId","setInterval","clearInterval","handleSendMessage","newMessage","headers","body","JSON","stringify","ok","Error","handleNickSubmit","className","children","onNickSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/HERNAN/Desktop/PRoGRAMACIoN/chat/app-chat/src/App.jsx"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport NickWindow from './NickWindow';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [nick, setNick] = useState('');\n  const [showNickInput, setShowNickInput] = useState(true);\n\n  useEffect(() => {\n    fetch('http://localhost:3001/mensajes', {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(data => {\n        setMessages(data);\n        console.log('Mensajes cargados correctamente desde la base de datos.');\n      })\n      .catch(error => {\n        console.error('Error al cargar mensajes desde la base de datos:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetch('http://localhost:3001/mensajes', {\n        method: 'GET'\n      })\n        .then(response => response.json())\n        .then(data => {\n          setMessages(data);\n          console.log('Mensajes actualizados correctamente desde la base de datos.');\n        })\n        .catch(error => {\n          console.error('Error al actualizar mensajes desde la base de datos:', error);\n        });\n    }, 3000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const handleSendMessage = (newMessage) => {\n    console.log(\"newMessage:\", newMessage)\n    setMessages([...messages, newMessage]);\n    fetch('http://localhost:3001/mensajes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newMessage)\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Error al guardar el mensaje en la base de datos.');\n        }\n        console.log('Mensaje guardado correctamente en la base de datos.');\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const handleNickSubmit = (nick) => {\n    setNick(nick);\n    setShowNickInput(false);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {showNickInput ? (\n        <NickWindow onNickSubmit={handleNickSubmit} />\n      ) : (\n        <>\n          <MessageList messages={messages} />\n          <MessageInput onSendMessage={handleSendMessage} nick={nick} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}